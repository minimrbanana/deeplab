## Refer to http://caffe.berkeleyvision.org/installation.html
# Contributions simplifying and improving our build system are welcome!

# cuDNN acceleration switch (uncomment to build with cuDNN).
# USE_CUDNN := 1

# CPU-only switch (uncomment to build without GPU support).
# CPU_ONLY := 1

# To customize your choice of compiler, uncomment and set the following.
# N.B. the default for Linux is g++ and the default for OSX is clang++
# CUSTOM_CXX := g++

# CUDA directory contains bin/ and lib/ directories that we need.
# CUDA_DIR := /usr/lib/nvidia-cuda-toolkit
# On Ubuntu 14.04, if cuda tools are installed via
# "sudo apt-get install nvidia-cuda-toolkit" then use this instead:
CUDA_DIR := /usr

# CUDA architecture setting: going with all of them.
# For CUDA < 6.0, comment the *_50 lines for compatibility.
CUDA_ARCH := -gencode arch=compute_20,code=sm_20 \
		-gencode arch=compute_20,code=sm_21 \
		-gencode arch=compute_30,code=sm_30 \
		-gencode arch=compute_35,code=sm_35 \
		-gencode arch=compute_50,code=sm_50 \
		-gencode arch=compute_50,code=compute_50
# BLAS choice:
# atlas for ATLAS (default)
# mkl for MKL
# open for OpenBlas
BLAS := atlas
# Custom (MKL/ATLAS/OpenBLAS) include and lib directories.
# Leave commented to accept the defaults for your choice of BLAS
# (which should work)!
# BLAS_INCLUDE := /path/to/your/blas
# BLAS_LIB := /path/to/your/blas

# This is required only if you will compile the matlab interface.
# MATLAB directory should contain the mex binary in /bin.
# MATLAB_DIR := /usr/local
# MATLAB_DIR := /Applications/MATLAB_R2012b.app
MATLAB_DIR := /usr/lib/matlab-8.6/

# NOTE: this is required only if you will compile the python interface.
# We need to be able to find Python.h and numpy/arrayobject.h.
 PYTHON_INCLUDE := /usr/include/python2.7 \
		 /home/zhongjie/CodesDown/numpy-1.10.4/numpy/core/include
# Anaconda Python distribution is quite popular. Include path:
# Verify anaconda location, sometimes it's in root.
ANACONDA_HOME := /home/zhongjie/CodesDown/anaconda
PYTHON_INCLUDE := $(ANACONDA_HOME)/include \
		 $(ANACONDA_HOME)/include/python2.7 \
		# $(ANACONDA_HOME)/lib/python2.7/site-packages/numpy/core/include \

# We need to be able to find libpythonX.X.so or .dylib.
#PYTHON_LIB := /usr/lib/python2.7/
 PYTHON_LIB := $(ANACONDA_HOME)/lib

# Whatever else you find you need goes here.
#INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include
#LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib

INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include \
    /home/zhongjie/CodesDown/protobuf-master/build/include \
    /home/zhongjie/CodesDown/glog-0.3.4/build/include \
    /home/zhongjie/CodesDown/leveldb-master/include \
    /home/zhongjie/CodesDown/gflags-2.0/build/include \
    /home/zhongjie/CodesDown/liblmdb \
    /home/zhongjie/CodesDown/hdf5/include \
    /home/zhongjie/CodesDown/anaconda/include \
    /home/zhongjie/CodesDown/numpy-1.10.4/numpy/core/include \
    /home/zhongjie/CodesDown/snappy-1.1.3/build/include \


LIBRARY_DIRS := $(PYTHON_LIB) /usr/lib /usr/local/lib \
    /home/zhongjie/CodesDown/protobuf-master/build/lib \
    /home/zhongjie/CodesDown/glog-0.3.4/build/lib \
    /home/zhongjie/CodesDown/leveldb-master \
    /home/zhongjie/CodesDown/gflags-2.0/build/lib  \
    /home/zhongjie/CodesDown/liblmdb \
    /home/zhongjie/CodesDown/hdf5/lib \
    /home/zhongjie/CodesDown/anaconda/lib \
    /home/zhongjie/CodesDown/numpy-1.10.4/numpy/core/lib \
    /home/zhongjie/CodesDown/snappy-1.1.3/build/lib \


# Uncomment to use `pkg-config` to specify OpenCV library paths.
# (Usually not necessary -- OpenCV libraries are normally installed in one of the above $LIBRARY_DIRS.)
# USE_PKG_CONFIG := 1

BUILD_DIR := build
DISTRIBUTE_DIR := distribute

# Uncomment for debugging. Does not work on OSX due to https://github.com/BVLC/caffe/issues/171
DEBUG := 1

# The ID of the GPU that 'make runtest' will use to run unit tests.
TEST_GPUID := 0

# enable pretty build (comment to see full commands)
Q ?= @
